name: CI

on:
  push:
    branches: [master]
  pull_request:
    paths:
      - "**.js"
      - "package.json"
      - ".github/workflows/ci.yml"

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        node-version: [14.x, 12.x, 12.16.3, 12.3.0, min-engine]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Get minimum node-version from package.json
        if: matrix.node-version == 'min-engine'
        id: min-engine
        run: echo "::set-output name=v::$(npx -q minimum-node-version)"

      # Use minimum node version from package.json
      - name: Use Node.js ${{ steps.min-engine.outputs.v }}
        uses: actions/setup-node@v2-beta
        if: matrix.node-version == 'min-engine'
        with:
          node-version: ${{ steps.min-engine.outputs.v }}

      # check latest for "12.x"
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        if: matrix.node-version == '12.x'
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      # don't check latest for all others
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        if: matrix.node-version != '12.x' && matrix.node-version != 'min-engine'
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install

      # for node < 12.16
      - run: npm run test:esm
        if: matrix.node-version == '12.3.0' || matrix.node-version == 'min-engine'

      # for node ~ 12.16.x
      - run: npm run test:experimental
        if: matrix.node-version == '12.16.3'

      # for node >= 12.17
      - run: npm test
        if: matrix.node-version == '14.x' || matrix.node-version == '12.x'

      - run: npm run test:cjs-build

      # upload coverage only once
      - name: Coveralls
        uses: coverallsapp/github-action@master
        if: matrix.node-version == '14.x' && matrix.os == 'ubuntu-latest'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
